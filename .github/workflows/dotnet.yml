name: Build, Test, and Deploy

on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  build:
    name: Build and Test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0 # Disable shallow clone to get a full clone for better analysis.

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: "zulu"

      - name: Setup .NET
        uses: actions/setup-dotnet@v2
        with:
          dotnet-version: 8.0.x

      - name: Restore dependencies for service
        run: dotnet restore ./ReviewService/ReviewService/ReviewService.csproj

      - name: Build service
        run: dotnet build ./ReviewService/ReviewService/ReviewService.csproj --no-restore

      - name: Restore dependencies for tests
        run: dotnet restore ./ReviewServiceTest/ReviewServiceTest.csproj

      - name: Build test project
        run: dotnet build ./ReviewServiceTest/ReviewServiceTest.csproj --no-restore

      - name: Run tests with coverage
        run: dotnet test ./ReviewServiceTest/ReviewServiceTest.csproj --no-build --verbosity normal /p:CollectCoverage=true /p:CoverletOutputFormat=opencover /p:CoverletOutput=./TestResults/coverage/

  deploy:
    name: Deploy to AKS
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push backend Docker image
        uses: docker/build-push-action@v5
        with:
          context: ./ReviewService
          file: ./ReviewService/ReviewService/Dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/reviewservice-backend:latest

      - name: Set up Azure CLI
        uses: azure/setup-kubectl@v1
        with:
          version: 'latest'

      - name: Log in to Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Set AKS context
        run: az aks get-credentials --resource-group ${{ secrets.AKS_RESOURCE_GROUP }} --name ${{ secrets.AKS_CLUSTER_NAME }}
        continue-on-error: true

      - name: Create Kubernetes secret for ReviewService
        run: |
          kubectl create secret generic reviewservice-secrets \
            --from-literal=postgres-host=${{ secrets.POSTGRES_HOST }} \
            --from-literal=postgres-port=${{ secrets.POSTGRES_PORT }} \
            --from-literal=postgres-db=${{ secrets.POSTGRES_DB }} \
            --from-literal=postgres-user=${{ secrets.POSTGRES_USER }} \
            --from-literal=postgres-password=${{ secrets.POSTGRES_PASSWORD }} \
            --from-literal=servicebus-connection-string=${{ secrets.SERVICEBUS_CONNECTION_STRING }} \
            --dry-run=client -o yaml > ./k8s/reviewservice-secrets.yaml
          kubectl apply -f ./k8s/reviewservice-secrets.yaml
        continue-on-error: true

      - name: Deploy to AKS
        run: |
          kubectl apply -f ./k8s/deployment.yaml
          kubectl apply -f ./k8s/service.yaml
        continue-on-error: true
